// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * Body_search_definition_batch_definition_batch_post
 */
export type BodySearchDefinitionBatchDefinitionBatchPost = {
    /**
     * Query
     *
     * 搜索关键词（用逗号分隔）
     */
    query: string;
};

/**
 * Body_search_definition_definition_post
 */
export type BodySearchDefinitionDefinitionPost = {
    /**
     * Query
     *
     * 搜索关键词
     */
    query: string;
};

/**
 * Body_search_relationship_relation_post
 */
export type BodySearchRelationshipRelationPost = {
    /**
     * Query
     *
     * 搜索关键词
     */
    query: string;
};

/**
 * Body_search_search_batch_post
 */
export type BodySearchSearchBatchPost = {
    /**
     * File
     */
    file: Blob | File;
    /**
     * Search Type
     */
    search_type: string;
};

/**
 * Body_upload_file_files_post
 */
export type BodyUploadFileFilesPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * DefinitionResponse
 */
export type DefinitionResponse = {
    /**
     * Result
     */
    result: Array<DefinitionResult>;
};

/**
 * DefinitionResult
 */
export type DefinitionResult = {
    /**
     * Term
     */
    term: string;
    /**
     * Definition
     */
    definition: string;
    /**
     * Documents
     */
    documents: string;
    /**
     * Page
     */
    page: number;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * RelationResponse
 */
export type RelationResponse = {
    /**
     * Result
     */
    result: Array<RelationResult>;
};

/**
 * RelationResult
 */
export type RelationResult = {
    /**
     * Term1
     */
    term1: string;
    /**
     * Term2
     */
    term2: string;
    /**
     * Relation
     */
    relation: number;
    /**
     * Reason
     */
    reason: string;
    /**
     * Documents
     */
    documents: string;
    /**
     * Page
     */
    page: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type UploadFileFilesPostData = {
    body: BodyUploadFileFilesPost;
    path?: never;
    query?: never;
    url: '/files';
};

export type UploadFileFilesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadFileFilesPostError = UploadFileFilesPostErrors[keyof UploadFileFilesPostErrors];

export type UploadFileFilesPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteFileFilesFilenameDeleteData = {
    body?: never;
    path: {
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{filename}';
};

export type DeleteFileFilesFilenameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFileFilesFilenameDeleteError = DeleteFileFilesFilenameDeleteErrors[keyof DeleteFileFilesFilenameDeleteErrors];

export type DeleteFileFilesFilenameDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DownloadFileFilesFilenameGetData = {
    body?: never;
    path: {
        /**
         * Filename
         */
        filename: string;
    };
    query?: never;
    url: '/files/{filename}';
};

export type DownloadFileFilesFilenameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadFileFilesFilenameGetError = DownloadFileFilesFilenameGetErrors[keyof DownloadFileFilesFilenameGetErrors];

export type DownloadFileFilesFilenameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListFilesFilesListGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/files/list/';
};

export type ListFilesFilesListGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SearchDefinitionDefinitionPostData = {
    body: BodySearchDefinitionDefinitionPost;
    path?: never;
    query?: never;
    url: '/definition';
};

export type SearchDefinitionDefinitionPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchDefinitionDefinitionPostError = SearchDefinitionDefinitionPostErrors[keyof SearchDefinitionDefinitionPostErrors];

export type SearchDefinitionDefinitionPostResponses = {
    /**
     * Successful Response
     */
    200: DefinitionResponse;
};

export type SearchDefinitionDefinitionPostResponse = SearchDefinitionDefinitionPostResponses[keyof SearchDefinitionDefinitionPostResponses];

export type SearchDefinitionBatchDefinitionBatchPostData = {
    body: BodySearchDefinitionBatchDefinitionBatchPost;
    path?: never;
    query?: never;
    url: '/definition/batch';
};

export type SearchDefinitionBatchDefinitionBatchPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchDefinitionBatchDefinitionBatchPostError = SearchDefinitionBatchDefinitionBatchPostErrors[keyof SearchDefinitionBatchDefinitionBatchPostErrors];

export type SearchDefinitionBatchDefinitionBatchPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SearchRelationshipRelationPostData = {
    body: BodySearchRelationshipRelationPost;
    path?: never;
    query?: never;
    url: '/relation';
};

export type SearchRelationshipRelationPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchRelationshipRelationPostError = SearchRelationshipRelationPostErrors[keyof SearchRelationshipRelationPostErrors];

export type SearchRelationshipRelationPostResponses = {
    /**
     * Successful Response
     */
    200: RelationResponse;
};

export type SearchRelationshipRelationPostResponse = SearchRelationshipRelationPostResponses[keyof SearchRelationshipRelationPostResponses];

export type SearchSearchBatchPostData = {
    body: BodySearchSearchBatchPost;
    path?: never;
    query?: never;
    url: '/search/batch';
};

export type SearchSearchBatchPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchSearchBatchPostError = SearchSearchBatchPostErrors[keyof SearchSearchBatchPostErrors];

export type SearchSearchBatchPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
